{"trial_id": "0011", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "num_filters_first_layer", "default": null, "conditions": [], "min_value": 16, "max_value": 48, "step": 2, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "first_kernel_size", "default": null, "conditions": [], "min_value": 10, "max_value": 30, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "stride", "default": null, "conditions": [], "min_value": 1, "max_value": 12, "step": 1, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "first_dropout_rate", "default": 0.2, "conditions": [], "min_value": 0.2, "max_value": 0.7, "step": 0.25, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "num_filters_second_layer", "default": null, "conditions": [], "min_value": 32, "max_value": 96, "step": 2, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "second_kernel_size", "default": null, "conditions": [], "min_value": 10, "max_value": 30, "step": 1, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "second_dropout_rate", "default": 0.2, "conditions": [], "min_value": 0.2, "max_value": 0.7, "step": 0.25, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "num_filters_third_layer", "default": null, "conditions": [], "min_value": 32, "max_value": 96, "step": 2, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "dropout_rate_dense", "default": 0.2, "conditions": [], "min_value": 0.2, "max_value": 0.7, "step": 0.25, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "learning_rate", "default": 1e-05, "conditions": [], "min_value": 1e-05, "max_value": 0.001, "step": null, "sampling": "log"}}], "values": {"num_filters_first_layer": 24, "first_kernel_size": 22, "stride": 9, "first_dropout_rate": 0.45, "num_filters_second_layer": 96, "second_kernel_size": 23, "second_dropout_rate": 0.2, "num_filters_third_layer": 54, "dropout_rate_dense": 0.2, "learning_rate": 5.161200419205417e-05, "tuner/epochs": 2, "tuner/initial_epoch": 0, "tuner/bracket": 3, "tuner/round": 0}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"/Users/macad/anaconda3/lib/python3.11/site-packages/keras_tuner/src/engine/base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"/Users/macad/anaconda3/lib/python3.11/site-packages/keras_tuner/src/engine/base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/macad/anaconda3/lib/python3.11/site-packages/keras_tuner/src/tuners/hyperband.py\", line 427, in run_trial\n    return super().run_trial(trial, *fit_args, **fit_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/macad/anaconda3/lib/python3.11/site-packages/keras_tuner/src/engine/tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/macad/anaconda3/lib/python3.11/site-packages/keras_tuner/src/engine/tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/macad/anaconda3/lib/python3.11/site-packages/keras_tuner/src/engine/hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/macad/anaconda3/lib/python3.11/site-packages/keras/src/utils/traceback_utils.py\", line 122, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"/Users/macad/anaconda3/lib/python3.11/site-packages/keras/src/utils/traceback_utils.py\", line 124, in error_handler\n    del filtered_tb\nValueError: Exception encountered when calling Conv1D.call().\n\n\u001b[1mNegative dimension size caused by subtracting 23 from 17 for '{{node sequential_1/conv1d_2_1/convolution}} = Conv2D[T=DT_FLOAT, data_format=\"NHWC\", dilations=[1, 1, 1, 1], explicit_paddings=[], padding=\"VALID\", strides=[1, 1, 9, 1], use_cudnn_on_gpu=true](sequential_1/conv1d_2_1/convolution/ExpandDims, sequential_1/conv1d_2_1/convolution/ExpandDims_1)' with input shapes: [?,1,17,96], [1,23,96,54].\u001b[0m\n\nArguments received by Conv1D.call():\n  \u2022 inputs=tf.Tensor(shape=(None, 17, 96), dtype=float32)\n"}